{"version":3,"sources":["components/planet/img/Tatooine.png","components/planet/img/Alderaan.jpg","components/planet/img/Yavin IV.jpg","components/planet/img/Hoth.png","components/planet/img/Bespin.png","components/planet/img/Dagobah.jpg","components/planet/img/Endor.png","components/planet/img/Naboo.png","components/planet/img/Coruscant.jpg","components/planet/img/Geonosis.png","components/planet/img/Eriadu.png","components/planet/img/Mon Cala.png","components/planet/img/Tund.jpg","components/planet/img/Mirial.jpg","components/planet/img/Utapau.png","components/planet/img/Corellia.png","components/planet/img/Chandrila.png","components/planet/img/HaruunKal.jpg","components/planet/img/Serenno.png","components/planet/img/Mustafar.png","components/planet/img/Rodia.png","components/planet/img/Sullust.png","components/planet/img/Cerea.png","components/planet/img/Concord_Dawn.png","components/menu/pages/Home.js","components/menu/pages/Contact.js","components/weather/WeatherController.js","components/weather/Info.js","components/weather/Form.js","components/weather/WeatherMain.js","components/tictactoe/Square.js","components/tictactoe/Board.js","components/tictactoe/MainTicTacToe.js","components/hooks/Hook.js","components/Todo/context.js","components/Todo/Todo/TodoItem.js","components/Todo/Todo/TodoList.js","components/Todo/Todo/AddTodo.js","components/Todo/Todo.js","components/crypto/Coin.js","components/crypto/MainApi.js","components/planet/ImagePlanet.js","components/planet/Planet.js","components/planet/ControlPlanet.js","components/miners/MinerList.js","components/miners/Miner.js","components/miners/ControlMiner.js","components/menu/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","Component","Contact","href","WeatherController","this","props","city","main","src","iconUrl","alt","temp","country","wind","sunrise","sunset","Info","Form","action","onSubmit","weatherMethod","type","name","placeholder","value","API_KEY","WeatherMain","state","error","gettingWeather","event","a","preventDefault","target","elements","fetch","apiUrl","console","log","json","data","sys","timezone","date","Date","setTime","toLocaleString","icon","weather","setState","description","toFixed","speed","alert","Square","onClick","calculateWinner","squaresCalc","lines","i","length","b","c","includes","Board","squares","Array","fill","xIsNext","squaresCopy","slice","randomIndex","Math","floor","random","handleClick","winner","status","renderSquare","MainTicTacToe","Hook","useState","count","setCount","Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","join","checked","id","title","bind","ul","listStyle","margin","TodoList","todos","map","key","onToggle","AddTodo","onCreate","setValue","trim","Todo","setTodos","Provider","filter","concat","now","Coin","image","price","symbol","volume","priceChange","marketcap","MainApi","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","catch","filteredCoins","coin","toLowerCase","e","total_volume","current_price","price_change_percentage_24h","market_cap","IMAGE_MAP","require","Planet","url","climate","gravity","terrain","surface_water","population","img","ControlPlanet","planet1","setPlanet1","planet2","setPlanet2","planet3","setPlanet3","planet4","setPlanet4","planet5","setPlanet5","planet6","setPlanet6","getPlanetPage1","getPlanetPage2","getPlanetPage3","getPlanetPage4","getPlanetPage5","getPlanetPage6","Promise","all","results","fetchData","newPlanet","flat","newPlanet2","newPlanet3","newPlanet4","newPlanet5","newPlanet6","planet","surfaceWater","residents","films","ASIC_LIST","Miner","model","terahash","watt","price_kwt","Asics","btcDay","Number","incomeDay","incomeMonth","energyCost","profit","sum","ControlMiner","btcRate","SetbtcRate","hello","newLister","kwt","Main","to","exact","path","component","mainApi","mainPlanet","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"4NAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,2KCc5BC,E,uKAVP,OACI,yBAAKC,UAAU,aACX,wBAAIA,UAAU,eAAd,qGACA,uBAAGA,UAAU,cAAb,gGAA4C,6BAA5C,wwB,GALGC,aCkBJC,E,uKAhBP,OACI,yBAAKF,UAAU,wBAEX,mGACA,6BACA,kGACA,6BACA,4CACA,uBAAGG,KAAK,oCAAR,oCACA,6BARJ,MAQa,6BACT,uBAAGH,UAAU,WAAWG,KAAK,eAA7B,6B,GAZMF,a,yBCwBPG,E,uKAtBP,OACI,yBAAKJ,UAAU,aACb,4BAAKK,KAAKC,MAAMC,MACd,4BAAKF,KAAKC,MAAME,MAChB,yBAAKC,IAAKJ,KAAKC,MAAMI,QAASC,IAAKN,KAAKC,MAAMK,MAC9C,mGAAkBN,KAAKC,MAAMM,KAA7B,MACA,6BACA,6BACA,6BACA,yBAAKZ,UAAU,cACf,8DAAWK,KAAKC,MAAMC,MACtB,oEAAYF,KAAKC,MAAMO,SACvB,kGAAiBR,KAAKC,MAAMM,MAC5B,+GAAoBP,KAAKC,MAAMQ,MAC/B,yGAAmBT,KAAKC,MAAMS,SAC9B,8DAAWV,KAAKC,MAAMU,c,GAjBNf,aCajBgB,E,uKAXP,OACI,yBAAKjB,UAAU,wBACX,uNACA,6BACA,sOACA,kC,GAPGC,aCoBJiB,E,uKAlBP,OACI,yBAAKlB,UAAU,aACf,0BAAMA,UAAU,eAAemB,OAAO,GAAGC,SAAUf,KAAKC,MAAMe,eAC1D,2BAAOrB,UAAU,OAAOsB,KAAK,OAAOC,KAAK,OAAOC,YAAY,gFAC5D,4BAAQxB,UAAU,UAAUuB,KAAO,WAC/B,4BAAQE,MAAM,KACd,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,MAAd,sBACA,4BAAQA,MAAM,MAAd,wCACA,4BAAQA,MAAM,MAAd,+CAEJ,mH,GAbGxB,aCGbyB,EAAU,mCAqFDC,E,4MAlFXC,MAAQ,CACJpB,KAAM,KAENG,IAAK,KACLG,KAAM,KACNF,KAAM,KACNL,KAAM,KACNM,QAAS,KACTE,QAAS,KACTC,OAAQ,KACRa,MAAO,M,EAKXC,e,uCAAiB,WAAOC,GAAP,6BAAAC,EAAA,6DACbD,EAAME,iBACA1B,EAAOwB,EAAMG,OAAOC,SAAS5B,KAAKkB,MAClCZ,EAAUkB,EAAMG,OAAOC,SAAStB,QAAQY,MAHjC,SAMQW,MAAM,oDAAD,OAAqD7B,EAArD,YAA6DM,EAA7D,kBAA8Ea,IAN3F,cAMPW,EANO,OAObC,QAAQC,IAAIF,GAPC,SAQMA,EAAOG,OARb,OAQPC,EARO,OASbH,QAAQC,IAAIE,GAGZ,IACQ1B,EAAS0B,EAAKC,IAAI3B,QACT0B,EAAKC,IAAI1B,OAClB2B,EAAWF,EAAKE,UAEhBC,EAAO,IAAIC,MACVC,QAAkB,IAAV/B,EAAiB4B,GACZC,EAAKG,iBAKnBC,EAAOP,EAAKQ,QAAQ,GAAGD,KAE3B,EAAKE,SAAS,CACV1C,KAAMiC,EAAKQ,QAAQ,GAAGzC,KACtBE,QAAQ,oCAAD,OAAsCsC,EAAtC,WACPrC,IAAK8B,EAAKQ,QAAQE,YAClBvC,MAAO6B,EAAKjC,KAAKI,KAAM,QAAQwC,QAAQ,GACvCtC,KAAM2B,EAAK3B,KAAKuC,MAChB9C,KAAMkC,EAAKlB,KACXV,QAAS4B,EAAKC,IAAI7B,UAIxB,MAAOgB,GACLyB,MAAM,iBACNhB,QAAQC,IAAIV,GAvCH,4C,6GA+Cb,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMR,cAAehB,KAAKyB,iBAC1B,kBAAC,EAAD,CACAtB,KAAMH,KAAKuB,MAAMpB,KACjBE,QAASL,KAAKuB,MAAMlB,QACpBC,IAAKN,KAAKuB,MAAMjB,IAChBG,KAAMT,KAAKuB,MAAMd,KACjBF,KAAMP,KAAKuB,MAAMhB,KACjBL,KAAMF,KAAKuB,MAAMrB,KACjBM,QAASR,KAAKuB,MAAMf,QACpBE,QAASV,KAAKU,QACdC,OAAQX,KAAKW,c,GA5EHf,a,OCIXsD,MATf,SAAgBjD,GACR,OACI,4BAAQN,UAAW,SAAUwD,QAAS,kBAAMlD,EAAMkD,YAC7ClD,EAAMmB,QCiEvB,SAASgC,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC5B5B,EAD4B,KACzB8B,EADyB,KACtBC,EADsB,KAGnC,GAAIL,EAAY1B,IAAM0B,EAAY1B,KAAO0B,EAAYI,IAAMJ,EAAY1B,KAAO0B,EAAYK,GACtF,OAAOL,EAAY1B,GAChB,IAAK0B,EAAYM,SAAS,MAC7B,MAAO,OAGf,OAAO,EAEIC,M,kDAzFX,WAAY3D,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAQ,CACTsC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,wDAQPT,GAER,IAAMU,EAAcjE,KAAKuB,MAAMsC,QAAQK,QAEvC,IAAKD,EAAYV,KAAOH,EAAgBa,GAAc,CAElD,IAAIE,EADJnE,KAAKuB,MAAMyC,QAAUC,EAAYV,GAAK,IAAMU,EAAYV,GAAK,IAE7D,EAAG,CACC,IAAIU,EAAYN,SAAS,MAAO,MAChCQ,EAAcC,KAAKC,MAAsB,EAAhBD,KAAKE,gBACI,OAA7BL,EAAYE,IACrBF,EAAYE,GAAe,IAC3BnE,KAAK6C,SAAS,CACVmB,SAAS,EACTH,QAASI,O,mCAKRV,GAAI,IAAD,OACZ,OAAO,kBAAC,EAAD,CACHnC,MAAOpB,KAAKuB,MAAMsC,QAAQN,GAC1BJ,QAAS,kBAAM,EAAKoB,YAAYhB,Q,+BAIpC,IAAIiB,EAASpB,EAAgBpD,KAAKuB,MAAMsC,SACpCY,EAAS,KAQb,OANIA,EADAD,GAAqB,SAAXA,EACJ,sDAAeA,GACH,SAAXA,EACE,kCAEH,+EAAoBxE,KAAKuB,MAAMyC,QAAU,IAAM,KAGrD,6BACI,yBAAKrE,UAAW,UACZ,4BAAK8E,IAET,yBAAK9E,UAAW,aACXK,KAAK0E,aAAa,GAClB1E,KAAK0E,aAAa,GAClB1E,KAAK0E,aAAa,IAEvB,yBAAK/E,UAAW,aACXK,KAAK0E,aAAa,GAClB1E,KAAK0E,aAAa,GAClB1E,KAAK0E,aAAa,IAEvB,yBAAK/E,UAAW,aACXK,KAAK0E,aAAa,GAClB1E,KAAK0E,aAAa,GAClB1E,KAAK0E,aAAa,S,GA9DnB9E,aCiBL+E,E,uKAdP,OACI,yBAAKhF,UAAU,wBACX,qHACA,yBAAKA,UAAW,cACZ,kBAAC,EAAD,OAEJ,yBAAKA,UAAW,mB,GARJC,aC4BbgF,MAXf,WAAiB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,KAEZ,OACQ,yBAAKpF,UAAU,qBACX,wCACA,8FAAiB,0BAAMA,UAAU,gBAAgBmF,IACjD,6BACA,4BAAQ3B,QAAS,WAAO4B,EAASD,EAAQ,KAAzC,8BCvBDE,EAFCC,IAAMC,gBCGhBC,EAAS,CACXC,GAAI,CACAC,QAAQ,OACRC,eAAgB,gBAChBC,WAAW,SACXC,QAAS,cACTC,OAAQ,kBACRC,aAAc,MACdC,aAAc,SAElBC,MAAO,CACHC,YAAa,UA4BNC,MAvBf,YAA4C,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrBC,EAAcC,qBAAWnB,GAAzBkB,WACJE,EAAU,GAKjB,OAHKL,EAAKM,WACLD,EAAQE,KAAK,QAEX,wBAAIC,MAAOpB,EAAOC,IAAlB,IAAuB,0BAAMzF,UAAWyG,EAAQI,KAAK,MACxD,2BAAOvF,KAAK,WAAWwF,QAASV,EAAKM,UAAWE,MAAOpB,EAAOS,MAC9DK,SAAU,kBAAMA,EAASF,EAAKW,OAC9B,gCAASV,EAAQ,EAAjB,MAA+BD,EAAKY,OACpC,4BAAQhH,UAAU,KAAKwD,QAAS+C,EAAWU,KAAK,KAAKb,EAAKW,KAA1D,UC7BEvB,EAAS,CACX0B,GAAI,CACAC,UAAW,OACXC,OAAO,EACPvB,QAAS,IAqBFwB,MAhBf,SAAkB/G,GACd,OACI,wBAAIsG,MAAOpB,EAAO0B,IACb5G,EAAMgH,MAAMC,KAAI,SAACnB,EAAMC,GACpB,OAAO,kBAAC,EAAD,CAAUD,KAAMA,EAAMoB,IAAKpB,EAAKW,GAAIV,MAAOA,EAAOC,SAAUhG,EAAMmH,gBCU1EC,MAvBf,YAA8B,IAAZC,EAAW,EAAXA,SAAW,EACJzC,mBAAS,IADL,mBACtBzD,EADsB,KAChBmG,EADgB,KAY7B,OACA,0BAAMhB,MAAO,CAACZ,aAAc,QAAS5E,SAVrC,SAAuBW,GACnBA,EAAME,iBAEFR,EAAMoG,QACNF,EAASlG,KAOb,2BAAOzB,UAAU,aAAayB,MAAOA,EAAO6E,SAAU,SAAAvE,GAAK,OAAI6F,EAAS7F,EAAMG,OAAOT,UACrF,4BAAQzB,UAAU,WAAWsB,KAAK,UAAlC,cCiCWwG,MA9Cf,WAAiB,IAAD,EACaxC,IAAMJ,SAAS,CACpC,CAAC6B,GAAG,EAAGL,WAAW,EAAMM,MAAM,iEAC9B,CAACD,GAAG,EAAGL,WAAW,EAAMM,MAAM,6EAC9B,CAACD,GAAG,EAAGL,WAAW,EAAMM,MAAM,yEAJtB,mBACLM,EADK,KACCS,EADD,KAmCd,OACA,kBAAC,EAAQC,SAAT,CAAkBvG,MAAO,CAAC8E,WAhB5B,SAAoBQ,GACpBgB,EAAST,EAAMW,QAAO,SAAA7B,GAAI,OAAEA,EAAKW,KAAOA,SAeE,yBAAK/G,UAAU,WACnD,4CACA,kBAAC,EAAD,CAAS2H,SAdf,SAAiBX,GACbe,EAAST,EAAMY,OAAO,CACd,CACIlB,QACAD,GAAIlE,KAAKsF,MACTzB,WAAU,SAUnBY,EAAMzD,OAAS,kBAAC,EAAD,CAAUyD,MAAOA,EAAOG,SA9B9C,SAAoBV,GACjBgB,EAAST,EAAMC,KAAI,SAAAnB,GAIf,OAHIA,EAAKW,KAAOA,IACZX,EAAKM,WAAaN,EAAKM,WAEpBN,SAyB4D,2C,yBCZ3DgC,EA9BF,SAAC,GAA4D,IAA3D7G,EAA0D,EAA1DA,KAAK8G,EAAqD,EAArDA,MAAaC,GAAwC,EAA/CC,OAA+C,EAAxCD,OAAME,EAAkC,EAAlCA,OAAOC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,UACtD,OACI,yBAAK1I,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,QACX,yBAAKS,IAAK4H,EAAO1H,IAAI,WACrB,4BAAKY,IAGT,yBAAKvB,UAAU,aACX,uBAAGA,UAAU,cAAb,IAA4BsI,GAC5B,uBAAGtI,UAAU,eAAb,IAA6BwI,EAAOzF,eAAe,UAElD0F,EAAc,EAAK,uBAAGzI,UAAU,oBAC5ByI,EAAYrF,QAAQ,GADL,KAEV,uBAAGpD,UAAU,sBAClByI,EAAYrF,QAAQ,GADf,KAGN,uBAAGpD,UAAU,kBAAb,oFACqB0I,EAAU3F,eAAe,c,MCgCvD4F,MA9Cf,WAAoB,IAAD,EACSzD,mBAAS,IADlB,mBACR0D,EADQ,KACFC,EADE,OAEY3D,mBAAS,IAFrB,mBAER4D,EAFQ,KAEDC,EAFC,KAIfC,qBAAU,WACNC,IAAMC,IAAI,4HACTC,MAAK,SAAAC,GACFP,EAASO,EAAI3G,SAEd4G,OAAM,SAAAxH,GAAK,OAAIyB,MAAM,kBACzB,IAQSsF,EAAM,GALlB,IAOMU,EAAgBV,EAAMX,QAAO,SAAAsB,GAAI,OAAIA,EAAKhI,KAAKiI,cAAcxF,SAAS8E,EAAOU,kBAErF,OAEE,yBAAKxJ,UAAU,gBACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,aAAd,uEACA,8BACI,2BAAOsB,KAAK,OAAOE,YAAY,iCAAQxB,UAAU,aAAasG,SAfrD,SAAAmD,GACjBV,EAAUU,EAAEvH,OAAOT,YAiB1B6H,EAAc/B,KAAI,SAAAgC,GACf,OACI,kBAAC,EAAD,CAAM/B,IAAK+B,EAAKxC,GAAIxF,KAAMgI,EAAKhI,KAAM8G,MAAOkB,EAAKlB,MACjDE,OAAQgB,EAAKhB,OACbC,OAAQe,EAAKG,aACbpB,MAAOiB,EAAKI,cACZlB,YAAac,EAAKK,4BAClBlB,UAAWa,EAAKM,kBCzCXC,G,MAAY,CAEb,SAAYC,EAAQ,IACpB,SAAYA,EAAQ,IACpB,WAAYA,EAAQ,IACpB,KAAQA,EAAQ,IAChB,OAAUA,EAAQ,IAClB,QAAWA,EAAQ,IACnB,MAASA,EAAQ,IACjB,MAASA,EAAQ,IACjB,UAAaA,EAAQ,IACrB,SAAYA,EAAQ,IACpB,OAAUA,EAAQ,IAClB,WAAYA,EAAQ,IACpB,KAAQA,EAAQ,IAChB,OAAUA,EAAQ,IAClB,OAAUA,EAAQ,IAClB,SAAYA,EAAQ,IACpB,UAAaA,EAAQ,IACrB,aAAcA,EAAQ,IACtB,QAAWA,EAAQ,IACnB,SAAYA,EAAQ,IACpB,MAASA,EAAQ,IACjB,QAAWA,EAAQ,IACnB,MAASA,EAAQ,IACjB,eAAgBA,EAAQ,MCqBrBC,EA9CA,SAAC,GAAiE,IAAhEzI,EAA+D,EAA/DA,KAAK0I,EAA0D,EAA1DA,IAAIC,EAAsD,EAAtDA,QAAQC,EAA8C,EAA9CA,QAAQC,EAAsC,EAAtCA,QAAQC,EAA8B,EAA9BA,cAAcC,EAAgB,EAAhBA,WAE1DC,EAAM,yBAAKvK,UAAU,aAAY,yBAAKS,IAAKqJ,EAAUvI,MAEvD,OAEI,yBAAKvB,UAAU,2BACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,4BAAKuB,GACL,uBAAGvB,UAAU,aAAYG,KAAM8J,EAAK/H,OAAO,UAAU+H,GAEhDM,GAET,6BACA,yBAAKvK,UAAU,eACX,+BACA,4BACA,uEACA,4BAAKkK,IAEL,4BACA,wFACA,4BAAKE,IAEL,4BACA,2DACA,4BAAKC,IAEL,4BACA,+FACA,gCAAMF,IAEN,4BACA,yFADA,KACuB,gCAAMG,KAG7B,+BAIR,+B,MCmKGE,MAxMf,WAA0B,IAAD,EAEOtF,mBAAS,IAFhB,mBAEduF,EAFc,KAENC,EAFM,OAGOxF,mBAAS,IAHhB,mBAGdyF,EAHc,KAGNC,EAHM,OAIO1F,mBAAS,IAJhB,mBAId2F,EAJc,KAINC,EAJM,OAKO5F,mBAAS,IALhB,mBAKd6F,EALc,KAKNC,EALM,OAMO9F,mBAAS,IANhB,mBAMd+F,EANc,KAMNC,EANM,OAOOhG,mBAAS,IAPhB,mBAOdiG,EAPc,KAONC,EAPM,KAiDrBpC,qBAAU,YA7BQ,WAElB,IAOMqC,EAAiBpC,IAAMC,IAPV,yCAQboC,EAAiBrC,IAAMC,IAPV,yCAQbqC,EAAiBtC,IAAMC,IAPV,yCAQbsC,EAAiBvC,IAAMC,IAPV,yCAQbuC,EAAiBxC,IAAMC,IAPV,yCAQbwC,EAAiBzC,IAAMC,IAPV,yCASnByC,QAAQC,IAAI,CAACP,EAAeC,EAAeC,EAAeC,EAAeC,EAAeC,IAAiBvC,MAAK,SAACC,GAG3GsB,EAAWtB,EAAI,GAAG3G,KAAKoJ,SACvBjB,EAAWxB,EAAI,GAAG3G,KAAKoJ,SACvBf,EAAW1B,EAAI,GAAG3G,KAAKoJ,SACvBb,EAAW5B,EAAI,GAAG3G,KAAKoJ,SACvBX,EAAW9B,EAAI,GAAG3G,KAAKoJ,SACvBT,EAAWhC,EAAI,GAAG3G,KAAKoJ,YAMvBC,KAGF,IAGF,IAAIC,EAActB,EAAQuB,OACtBC,EAActB,EAAQqB,OACtBE,EAAcrB,EAAQmB,OACtBG,EAAcpB,EAAQiB,OACtBI,EAAcnB,EAAQe,OACtBK,EAAclB,EAAQa,OAK5B,OAHE1J,QAAQC,IAAIwJ,GAIZ,yBAAK/L,UAAU,+BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UAC1B+L,EAAUxE,KAAI,SAAA+E,GAEX,OAEI,kBAAC,EAAD,CAAQ9E,IAAK8E,EAAOvF,GAAIxF,KAAM+K,EAAO/K,KAAK0I,IAAKqC,EAAOrC,IACtDC,QAASoC,EAAOpC,QAChBE,QAASkC,EAAOlC,QAChBmC,aAAcD,EAAOjC,cACrBF,QAASmC,EAAOnC,QAChBG,WAAYgC,EAAOhC,WACnBkC,UAAWF,EAAOE,UAClBC,MAAOH,EAAOG,YAOd,yBAAKzM,UAAU,OAEtBiM,EAAW1E,KAAI,SAAA+E,GAEJ,OAEK,kBAAC,EAAD,CAAQ9E,IAAK8E,EAAOvF,GAAIxF,KAAM+K,EAAO/K,KAAK0I,IAAKqC,EAAOrC,IACtDC,QAASoC,EAAOpC,QAChBE,QAASkC,EAAOlC,QAChBmC,aAAcD,EAAOjC,cACrBF,QAASmC,EAAOnC,QAChBG,WAAYgC,EAAOhC,WACnBkC,UAAWF,EAAOE,UAClBC,MAAOH,EAAOG,YASf,yBAAKzM,UAAU,UAE9BkM,EAAW3E,KAAI,SAAA+E,GAEJ,OACQ,kBAAC,EAAD,CAAQ9E,IAAK8E,EAAOvF,GAAIxF,KAAM+K,EAAO/K,KAAK0I,IAAKqC,EAAOrC,IACtDC,QAASoC,EAAOpC,QAChBE,QAASkC,EAAOlC,QAChBmC,aAAcD,EAAOjC,cACrBF,QAASmC,EAAOnC,QAChBG,WAAYgC,EAAOhC,WACnBkC,UAAWF,EAAOE,UAClBC,MAAOH,EAAOG,aAUlB,yBAAKzM,UAAU,OACf,yBAAKA,UAAU,UAE9BmM,EAAW5E,KAAI,SAAA+E,GAEJ,OACQ,kBAAC,EAAD,CAAQ9E,IAAK8E,EAAOvF,GAAIxF,KAAM+K,EAAO/K,KAAK0I,IAAKqC,EAAOrC,IACtDC,QAASoC,EAAOpC,QAChBE,QAASkC,EAAOlC,QAChBmC,aAAcD,EAAOjC,cACrBF,QAASmC,EAAOnC,QAChBG,WAAYgC,EAAOhC,WACnBkC,UAAWF,EAAOE,UAClBC,MAAOH,EAAOG,YAQlB,yBAAKzM,UAAU,UAE9BoM,EAAW7E,KAAI,SAAA+E,GAEJ,OACQ,kBAAC,EAAD,CAAQ9E,IAAK8E,EAAOvF,GAAIxF,KAAM+K,EAAO/K,KAAK0I,IAAKqC,EAAOrC,IACtDC,QAASoC,EAAOpC,QAChBE,QAASkC,EAAOlC,QAChBmC,aAAcD,EAAOjC,cACrBF,QAASmC,EAAOnC,QAChBG,WAAYgC,EAAOhC,WACnBkC,UAAWF,EAAOE,UAClBC,MAAOH,EAAOG,YAQlB,yBAAKzM,UAAU,UAE9BqM,EAAW9E,KAAI,SAAA+E,GAEJ,OACQ,kBAAC,EAAD,CAAQ9E,IAAK8E,EAAOvF,GAAIxF,KAAM+K,EAAO/K,KAAK0I,IAAKqC,EAAOrC,IACtDC,QAASoC,EAAOpC,QAChBE,QAASkC,EAAOlC,QAChBmC,aAAcD,EAAOjC,cACrBF,QAASmC,EAAOnC,QAChBG,WAAYgC,EAAOhC,WACnBkC,UAAWF,EAAOE,UAClBC,MAAOH,EAAOG,eC7LrBC,EAAY,CAExB,MAAU,CAAE,CACR,GAAO,IACP,MAAU,WACT,SAAa,OACb,IAAQ,QACR,UAAa,IACb,WAAe,SAId,CACC,GAAO,IACP,MAAU,WACT,SAAa,OACb,IAAQ,OACR,UAAa,IACb,WAAe,SAGjB,CACC,GAAO,IACP,MAAU,MACT,SAAa,OACb,IAAQ,MACR,UAAa,IACb,WAAe,SAIjB,CACC,GAAO,IACP,MAAU,MACT,SAAa,KACb,IAAQ,OACR,UAAa,IACb,WAAe,WC2CTC,EAhFD,SAAC,GAA8C,EAA7C5F,GAA8C,IAA3CuB,EAA0C,EAA1CA,MAAMsE,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,KAAKC,EAAe,EAAfA,UAKxCzL,EAAOoL,EAAUM,MACvB1K,QAAQC,IAAIjB,GAEZ,IAAI2L,GAAU,KAAWC,OAAOL,IAAWzJ,QAAQ,GAC/C+J,GAAaF,EAAS3E,GAAOlF,QAAQ,GACrCgK,GAA2B,GAAZD,GAAgB/J,QAAQ,GACvCiK,GAAcP,EAAOC,EAAY,KAAK3J,QAAQ,GAC9CkK,GAAUF,EAAcC,GAAYjK,QAAQ,GAE5CmK,EADS,EACHD,EAIN,OAFJhL,QAAQC,IAAI0K,GAMJ,4BACA,4BAAKL,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKG,GACL,4BAAK3E,GACL,4BAAK6E,GACL,4BAAKC,GACL,4BAAKL,GACL,4BAAKM,GACL,4BAAKC,GACL,4BApBK,GAqBL,4BAAKC,K,MC+BEC,MA5Df,WAAyB,IAAD,EACUtI,mBAAS,IADnB,mBACbuI,EADa,KACJC,EADI,KAGlBC,EADUjB,EACgBM,MAc9B,OAREhE,qBAAU,WACNC,IAAMC,IAHG,0HAIRC,MAAK,SAAAC,GACFsE,EAAWtE,EAAI3G,KAAK,GAAGkH,kBAExBN,OAAM,SAAAxH,GAAK,OAAIyB,MAAM,kBACzB,IAGH,yBAAKtD,UAAU,aAChB,2BAAOA,UAAU,6CACZ,6LACA,2BAAOA,UAAW,eACd,4BACI,qCACA,wCACA,oCACA,uCACA,yCACA,0CACA,4CACA,yCACA,4CACA,sCACA,sCACA,qCAKJ,+BACC2N,EAAMpG,KAAI,SAAAqG,GACP,OACJ,kBAAC,EAAD,CAAOpG,IAAKoG,EAAU7G,GAAI6F,MAAOgB,EAAUhB,MAAOtE,MAAOmF,EAASZ,SAAUe,EAAUf,SACtFC,KAAMc,EAAUC,IAAKd,UAAWa,EAAUb,mBCNvCe,E,uKAhCP,OACI,kBAAC,IAAD,KACI,6BACI,wBAAI9N,UAAW,UACX,4BAAI,kBAAC,IAAD,CAAS+N,GAAI,QAASC,OAAK,GAA3B,SACJ,4BAAI,kBAAC,IAAD,CAASD,GAAI,YAAb,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,YAAb,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,cAAb,cACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,SAAb,gBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,SAAb,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,WAAb,mBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,YAAb,qBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,WAAb,gBAER,6BACA,yBAAK/N,UAAW,WACZ,kBAAC,IAAD,CAAOiO,KAAM,QAASC,UAAWnO,IACjC,kBAAC,IAAD,CAAOkO,KAAM,WAAYC,UAAWhO,IACpC,kBAAC,IAAD,CAAO+N,KAAM,WAAYC,UAAWvM,IACpC,kBAAC,IAAD,CAAOsM,KAAM,aAAcC,UAAWlJ,IACtC,kBAAC,IAAD,CAAOiJ,KAAM,QAASC,UAAWjJ,IACjC,kBAAC,IAAD,CAAOgJ,KAAM,QAASC,UAAWpG,IACjC,kBAAC,IAAD,CAAOmG,KAAM,UAAWC,UAAWC,IACnC,kBAAC,IAAD,CAAOF,KAAM,WAAYC,UAAWE,IACpC,kBAAC,IAAD,CAAOH,KAAM,UAAWC,UAAWvB,W,GA1BxC1M,aCCJoO,MARf,WACE,OACE,yBAAKrO,UAAU,mBACb,kBAAC,EAAD,QCIcsO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEd/F,OAAM,SAAAxH,GACLS,QAAQT,MAAMA,EAAMwN,e","file":"static/js/main.526dab8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tatooine.985340c4.png\";","module.exports = __webpack_public_path__ + \"static/media/Alderaan.57f8711d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Yavin IV.637eb1b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hoth.d7d13f36.png\";","module.exports = __webpack_public_path__ + \"static/media/Bespin.3b8cdd01.png\";","module.exports = __webpack_public_path__ + \"static/media/Dagobah.58795608.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Endor.a9c7b1f3.png\";","module.exports = __webpack_public_path__ + \"static/media/Naboo.9f255c0e.png\";","module.exports = __webpack_public_path__ + \"static/media/Coruscant.d26ebbef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Geonosis.f5a2c987.png\";","module.exports = __webpack_public_path__ + \"static/media/Eriadu.0c6d163d.png\";","module.exports = __webpack_public_path__ + \"static/media/Mon Cala.f89edf27.png\";","module.exports = __webpack_public_path__ + \"static/media/Tund.14075555.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mirial.17dc8092.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Utapau.c2a4e1c9.png\";","module.exports = __webpack_public_path__ + \"static/media/Corellia.3d0eb68f.png\";","module.exports = __webpack_public_path__ + \"static/media/Chandrila.f10cd5e3.png\";","module.exports = __webpack_public_path__ + \"static/media/HaruunKal.8bde1897.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Serenno.7bb6797e.png\";","module.exports = __webpack_public_path__ + \"static/media/Mustafar.9b6141b6.png\";","module.exports = __webpack_public_path__ + \"static/media/Rodia.260245ec.png\";","module.exports = __webpack_public_path__ + \"static/media/Sullust.6159ac52.png\";","module.exports = __webpack_public_path__ + \"static/media/Cerea.462f554a.png\";","module.exports = __webpack_public_path__ + \"static/media/Concord_Dawn.0b470f24.png\";","import React, {Component} from \"react\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className=\"main_header\">Домашняя страница</h2>\r\n                <p className=\"main_title\">Добро пожаловать! <br></br>SPA приложение с небольшим функционалом,\r\n                в виде счетчика кликов, списка todo, игры крестики-нолики, информации о погоде в вашем городе и курсом криптовалют. </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from \"react\";\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container main_title\">\r\n\r\n                <h2>Мои контакты</h2>\r\n                <br />\r\n                <p>Храпов Роман</p>\r\n                <br />\r\n                <p>Web developer</p>\r\n                <a href=\"https://github.com/soft-lab-web/\">https://github.com/soft-lab-web/</a>\r\n                <br />   <br />\r\n                <a className=\"telegram\" href=\"@prost_roma\">Telegram: prost_roma</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, {Component} from \"react\";\r\n\r\nclass WeatherController extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n              <h1>{this.props.city}</h1>\r\n                <h2>{this.props.main}</h2>\r\n                <img src={this.props.iconUrl} alt={this.props.alt}/>\r\n                <h3>Температура: {this.props.temp} C</h3>\r\n                <br></br>\r\n                <hr/>\r\n                <br />\r\n                <div className=\"info_block\">\r\n                <p>Город: {this.props.city}</p>\r\n                <p>Страна: {this.props.country}</p>\r\n                <p>Температура: {this.props.temp}</p>\r\n                <p>Скорость ветра: {this.props.wind}</p>\r\n                <p>Восход солнца: {this.props.sunrise}</p>\r\n                <p>Закат: {this.props.sunset}</p>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherController;","import React, {Component} from \"react\";\r\n\r\nclass Info extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container main_title\">\r\n                <h2>Приложение для определения погоды</h2>\r\n                <br />\r\n                <p>Узнай погоду в своем городе и не только</p>\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info;","import React, {Component} from \"react\";\r\n\r\nclass Form extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <form className=\"weather_form\" action=\"\" onSubmit={this.props.weatherMethod}>\r\n                <input className=\"city\" type=\"text\" name=\"city\" placeholder=\"  Введите город\"/>\r\n                <select className=\"country\" name = \"country\" >\r\n                    <option value=\"\"></option>\r\n                    <option value=\"ru\">Russia</option>\r\n                    <option value=\"us\">США</option>\r\n                    <option value=\"uk\">Англия</option>\r\n                    <option value=\"fr\">Франция</option>\r\n                </select>\r\n                <button>Узнать погоду</button>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from \"react\";\r\nimport WeatherController from \"./WeatherController\";\r\nimport Info from \"./Info\";\r\nimport Form from \"./Form\";\r\n\r\nconst API_KEY = '2d95aa5d7d700b669673f00687181a27';\r\n\r\nclass WeatherMain extends Component {\r\n    state = {\r\n        main: null,\r\n        // iconUrl: null,\r\n        alt: null,\r\n        wind: null,\r\n        temp: null,\r\n        city: null,\r\n        country: null,\r\n        sunrise: null,\r\n        sunset: null,\r\n        error: null,\r\n       \r\n    }\r\n    //http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=2d95aa5d7d700b669673f00687181a27\r\n    // Promise(промис/обещание) - объект, представляющий окончательное завершение или сбойасинхронного запроса. Промис возвращает объект, к которому прикрепляется колбэк.\r\n    gettingWeather = async (event) => {\r\n        event.preventDefault(); // отменяет обновление страницы\r\n        const city = event.target.elements.city.value; //получаем значение введенного в поле формы с name='city'\r\n        const country = event.target.elements.country.value;\r\n\r\n        // выполняем асинронный запрос по Url через функцию fetch\r\n        const apiUrl = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\r\n        console.log(apiUrl);  // при успешном выполнении получаем статус ответа от сервера 200, т.е. все ОК\r\n        const data = await apiUrl.json(); // считываем данные\r\n        console.log(data); // полные данные по городу\r\n        //console.log(data.city.population); // узнать сколько людей в городе\r\n        \r\n        try {\r\n            let sunrise =data.sys.sunrise;\r\n            let sunset = data.sys.sunset;\r\n            let timezone = data.timezone;\r\n\r\n            let date = new Date();\r\n            date.setTime(sunrise * 1000 - timezone);\r\n            let sunriseDate = date.toLocaleString();\r\n\r\n            // data.setTime(sunset * 1000 -timezone);\r\n            // let sunsetDate = date.ToLocaleTimeString();\r\n\r\n            let icon = data.weather[0].icon;\r\n\r\n            this.setState({\r\n                main: data.weather[0].main,\r\n                iconUrl: `http://openweathermap.org/img/wn/${icon}@2x.png`,\r\n                alt: data.weather.description,\r\n                temp: (data.main.temp -273.15).toFixed(2),\r\n                wind: data.wind.speed,\r\n                city: data.name,\r\n                country: data.sys.country,\r\n                // sunset: null,\r\n                // sunrise:null,\r\n            });\r\n        } catch (error) {\r\n            alert(`error.message`);\r\n            console.log(error);\r\n        }\r\n        // setState = позволяет установить новое значение в state и как толкьо это произойдет наш компонент будет перерисован с новыми данными\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Info />\r\n                <Form weatherMethod={this.gettingWeather}/>\r\n                <WeatherController \r\n                main={this.state.main}\r\n                iconUrl={this.state.iconUrl}\r\n                alt={this.state.alt}\r\n                wind={this.state.wind}\r\n                temp={this.state.temp}\r\n                city={this.state.city}\r\n                country={this.state.country}\r\n                sunrise={this.sunrise}\r\n                sunset={this.sunset}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherMain;","import React, {Component} from \"react\";\r\n\r\nfunction Square(props) {\r\n        return (\r\n            <button className={\"square\"} onClick={() => props.onClick()}>\r\n                {props.value}\r\n\r\n            </button>\r\n        )\r\n}\r\n\r\nexport default Square;","import React, {Component} from \"react\";\r\nimport Square from \"./Square\";\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true\r\n        }\r\n    }\r\n    // обработчик нажатия на кнопку\r\n    handleClick(i) {\r\n        // debugger;\r\n        const squaresCopy = this.state.squares.slice(); // создать копию массива из состояния squares\r\n        // отмена повторного нажатия на элемент, и отмена при ничье и победе\r\n        if (!squaresCopy[i] && !calculateWinner(squaresCopy)) {\r\n            this.state.xIsNext ? squaresCopy[i] = 'X' : squaresCopy[i] = '0';\r\n            let randomIndex;\r\n            do {\r\n                if(!squaresCopy.includes(null)) break;\r\n                randomIndex = Math.floor(Math.random() * 9); // получаем случ. целое число от 0 до 8 вкл.\r\n            } while (squaresCopy[randomIndex] !== null);\r\n            squaresCopy[randomIndex] = '0';\r\n            this.setState({\r\n                xIsNext: true, // меняем каждый ход значение на противоположное\r\n                squares: squaresCopy\r\n            });\r\n        }\r\n    }\r\n    // метод генерацией square\r\n    renderSquare(i) {\r\n        return <Square\r\n            value={this.state.squares[i]}\r\n            onClick={() => this.handleClick(i)}\r\n        />\r\n    }\r\n    render() {\r\n        let winner = calculateWinner(this.state.squares);\r\n        let status = null;\r\n        if (winner && winner !== 'draw') {\r\n            status = `Победил: ${winner}`;\r\n        } else if (winner === 'draw') {\r\n            status = 'НИЧЬЯ!';\r\n        } else {\r\n            status = `Сейчас ходит: ${this.state.xIsNext ? 'X' : '0'}`\r\n        }\r\n        return (\r\n            <div>\r\n                <div className={\"status\"}>\r\n                    <h4>{status}</h4>\r\n                </div>\r\n                <div className={\"board-row\"}>\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className={\"board-row\"}>\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className={\"board-row\"}>\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction calculateWinner(squaresCalc) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        // console.log([a,b,c]);\r\n        if (squaresCalc[a] && squaresCalc[a] === squaresCalc[b] && squaresCalc[a] === squaresCalc[c]) {\r\n            return squaresCalc[a]; // возвращается крестик/нолик\r\n        } else if (!squaresCalc.includes(null)) { // если нет в массиве null, то это ничья\r\n            return 'draw';\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport default Board;","import React, {Component} from \"react\";\r\nimport Board from \"./Board\"\r\n\r\nclass MainTicTacToe extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container main_title\">\r\n                <h2>Крестики-Нолики</h2>\r\n                <div className={\"game-board\"}>\r\n                    <Board />\r\n                </div>\r\n                <div className={\"game-info\"}>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainTicTacToe;","import React, {Component, useState} from \"react\";\r\n// class Hook extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             count: 0\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <h3>вы кликнули: {this.state.count}</h3>\r\n//                 <button onClick={() => {this.setState({\r\n//                     count: this.state.count + 1\r\n//                 })}}>Клик</button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// тот же пример с хуком\r\nfunction Hook() {\r\n    const[count, setCount] = useState(0);\r\n    return (\r\n            <div className=\"container counter\">\r\n                <h1>Counter:</h1>\r\n                <h3>Вы кликнули: <span className=\"counter_pick\">{count}</span></h3>\r\n                <br />\r\n                <button onClick={() => {setCount(count + 1)}}>Клик</button>\r\n            </div>\r\n        )\r\n    }\r\nexport default Hook;","import React from 'react'\r\n\r\nconst Context = React.createContext() \r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\n\r\nconst styles = {\r\n    li: {\r\n        display:'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems:'center',\r\n        padding: '.5rem 1 rem',\r\n        border: '1px solid black',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1 rem'\r\n    }\r\n\r\n}\r\n\r\nfunction TodoItem({todo, index, onChange}) {\r\n    const {removeTodo} = useContext(Context)\r\n const classes = []\r\n\r\n if (todo.completed) {\r\n     classes.push('done')\r\n }\r\nreturn <li style={styles.li}> <span className={classes.join(' ')}>\r\n    <input type=\"checkbox\" checked={todo.completed} style={styles.input} \r\n    onChange={() => onChange(todo.id)}/>\r\n    <strong>{index + 1}  </strong>{todo.title}</span>\r\n    <button className=\"rn\" onClick={removeTodo.bind(null,todo.id)}>&times;</button></li>\r\n\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n\r\n\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin:0,\r\n        padding: 0,\r\n   \r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index)=> {\r\n                return <TodoItem todo={todo} key={todo.id} index={index} onChange={props.onToggle}/>\r\n            })\r\n        }\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos:PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\n\r\nexport default TodoList","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AddTodo({onCreate}) {\r\nconst [value,setValue] = useState('')\r\n\r\nfunction submitHandler(event) {\r\n    event.preventDefault()\r\n\r\n    if (value.trim()) {\r\n        onCreate(value)\r\n\r\n    }\r\n}\r\n\r\nreturn (\r\n<form style={{marginBottom: '1rem'}} onSubmit={submitHandler}>\r\n    <input className=\"input_todo\" value={value} onChange={event => setValue(event.target.value)}/>\r\n    <button className=\"btn-todo\" type=\"submit\">Add todo</button>\r\n</form>\r\n)\r\n}\r\n\r\nAddTodo.propTypes = {\r\nonCreate:PropTypes.func.isRequired }  \r\n\r\nexport default AddTodo","import React from 'react'\r\nimport TodoList from './Todo/TodoList'\r\nimport Context from './context'\r\nimport AddTodo from './Todo/AddTodo'\r\n\r\nfunction Todo() {\r\n    const [todos,setTodos] = React.useState([\r\n        {id:1, completed: false,title:'Купить хлеб'},\r\n        {id:2, completed: false,title:'Купить молоко'},\r\n        {id:3, completed: false,title:'Купить масло'}\r\n\r\n    ]) \r\n   \r\n\r\nfunction toggleTodo(id) {\r\n   setTodos(todos.map(todo => {\r\n       if (todo.id === id) {\r\n           todo.completed =! todo.completed\r\n       }\r\n       return todo\r\n   })\r\n   )\r\n}\r\n\r\n\r\nfunction removeTodo(id) {\r\nsetTodos(todos.filter(todo=>todo.id !== id))\r\n\r\n}\r\nfunction addTodo(title){\r\n    setTodos(todos.concat([\r\n            {\r\n                title,\r\n                id: Date.now(),\r\n                completed:false\r\n            }\r\n        ]\r\n        )\r\n    ) \r\n}\r\n  return (\r\n  <Context.Provider value={{removeTodo }}><div className=\"wrapper\">\r\n      <h1>React : Todo</h1>\r\n      <AddTodo onCreate={addTodo}/>\r\n      {todos.length ? <TodoList todos={todos} onToggle = {toggleTodo}/> : <p>No todos!</p>}\r\n     \r\n      </div>\r\n      </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react'\r\n\r\nconst Coin = ({name,image,symbol,price,volume,priceChange,marketcap}) => {\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <div className=\"coin\">\r\n                    <img src={image} alt=\"crypto\"/>\r\n                    <h1>{name}</h1>\r\n                  \r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">${price}</p>\r\n                    <p className=\"coin-volume\">${volume.toLocaleString('en-us')}</p>\r\n\r\n                    {priceChange < 0 ? (<p className=\"coin-percent red\">\r\n                        {priceChange.toFixed(2)}%</p>\r\n                         ) : (<p className=\"coin-percent green\">\r\n                        {priceChange.toFixed(2)}%</p>) \r\n                        }\r\n                        <p className=\"coin-marketcap\">\r\n                            Капитализация: ${marketcap.toLocaleString('en-us')}\r\n                        </p>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin\r\n","import React, {useState,useEffect} from 'react'\r\nimport './Api.css';\r\nimport axios from 'axios'\r\nimport Coin from './Coin'\r\nimport './Coin.css';\r\n\r\n\r\nfunction MainApi() {\r\n    const [coins,setCoins]= useState([]);   // монеты и функция которая будет обновлять\r\n    const [search,setSearch] = useState('')\r\n    \r\n    useEffect(()=>{\r\n        axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n        .then(res => {\r\n            setCoins(res.data); //получаем данные о монетах\r\n          \r\n        }).catch(error => alert('Api error'))\r\n    }, []);\r\n\r\n\r\n    const handleChange = e => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n \r\n    const btc = coins[0];\r\n\r\n    const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase())  // функция фильтр\r\n    );\r\n  return (\r\n   \r\n    <div className=\"col coin-app\">\r\n        <div className=\"coin-search\">\r\n            <h1 className=\"coin-text\">Поиск валюты</h1>\r\n            <form>\r\n                <input type=\"text\" placeholder=\"Поиск\" className=\"coin-input\" onChange={handleChange}/>\r\n            </form>\r\n        </div>\r\n{filteredCoins.map(coin => {\r\n    return (\r\n        <Coin key={coin.id} name={coin.name} image={coin.image} \r\n        symbol={coin.symbol}\r\n        volume={coin.total_volume}\r\n        price={coin.current_price}\r\n        priceChange={coin.price_change_percentage_24h}\r\n        marketcap={coin.market_cap}\r\n        />\r\n    )\r\n})}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainApi;\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport const IMAGE_MAP = {\r\n     \r\n            'Tatooine': require('./img/Tatooine.png'),\r\n            'Alderaan': require('./img/Alderaan.jpg'),\r\n            'Yavin IV': require('./img/Yavin IV.jpg') ,\r\n            'Hoth': require('./img/Hoth.png') ,\r\n            'Bespin': require('./img/Bespin.png') ,\r\n            'Dagobah': require('./img/Dagobah.jpg'),\r\n            'Endor': require('./img/Endor.png'),\r\n            'Naboo': require('./img/Naboo.png'),\r\n            'Coruscant': require('./img/Coruscant.jpg'),\r\n            'Geonosis': require('./img/Geonosis.png'),\r\n            'Eriadu': require('./img/Eriadu.png'),\r\n            'Mon Cala': require('./img/Mon Cala.png'),\r\n            'Tund': require('./img/Tund.jpg'),\r\n            'Mirial': require('./img/Mirial.jpg'),\r\n            'Utapau': require('./img/Utapau.png'),\r\n            'Corellia': require('./img/Corellia.png'),\r\n            'Chandrila': require('./img/Chandrila.png'),\r\n            'Haruun Kal': require('./img/HaruunKal.jpg'),\r\n            'Serenno': require('./img/Serenno.png'),\r\n            'Mustafar': require('./img/Mustafar.png'),\r\n            'Rodia': require('./img/Rodia.png'),\r\n            'Sullust': require('./img/Sullust.png'),\r\n            'Cerea': require('./img/Cerea.png'),\r\n            'Concord Dawn': require('./img/Concord_Dawn.png'),\r\n\r\n\r\n    };\r\n \r\n    \r\n        // return (\r\n            \r\n        //     <div  className=\"img-block\">\r\n                \r\n        //     {Object.keys(img_json).map(key => (\r\n       \r\n        //              <img src={img_json[key].portfolioImage} />\r\n        //     ))}\r\n        //       </div>\r\n        //     );\r\n    \r\n\r\n       \r\n\r\n        //Test\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {IMAGE_MAP} from './ImagePlanet';\r\n\r\nconst Planet = ({name,url,climate,gravity,terrain,surface_water,population}) => {\r\n\r\nconst img = <div className=\"img-block\"><img src={IMAGE_MAP[name]}/></div>\r\n\r\n    return (\r\n        \r\n        <div className=\"col-sm planet-container\">\r\n            <div className=\"row planet-row\">\r\n                <div className=\"planet\">\r\n                    <h1>{name}</h1>\r\n                    <a className=\"planet-url\"href={url} target='_blank'>{url}</a>\r\n\r\n                        {img}\r\n        </div>\r\n                <br />\r\n                <div className=\"planet-data\">\r\n                    <table>\r\n                    <tr>\r\n                    <td>Климат:  </td> \r\n                    <td>{climate}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Местность: </td>\r\n                    <td>{terrain}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Вода:  </td>\r\n                    <td>{surface_water}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Гравитация:  </td>\r\n                    <td> {gravity}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Население:  </td>  <td> {population}</td>\r\n                    </tr>\r\n                    </table>\r\n                    <br />\r\n                </div>\r\n             \r\n            </div>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Planet\r\n\r\n//git\r\n","import React, {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Planet from './Planet'\r\nimport './Planet.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nfunction ControlPlanet() {\r\n\r\n    const [planet1,setPlanet1]= useState([]);\r\n    const [planet2,setPlanet2]= useState([]);\r\n    const [planet3,setPlanet3]= useState([]);\r\n    const [planet4,setPlanet4]= useState([]);\r\n    const [planet5,setPlanet5]= useState([]);\r\n    const [planet6,setPlanet6]= useState([]);\r\n\r\n    // for (let i = 1; i <= 6; i++) {\r\n    //     fetch('https://swapi.dev/api/planets/?page=' + i).then(function (response) {\r\n    //       response.json().then(function (data) {\r\n    //         for(let i = 0; i < data.results.length; i++a) {\r\n    //           list.push(data.results[i]);\r\n    //         }\r\n    //       });\r\n    //     });\r\n    //   }\r\n    //   return takePlanets;\r\n\r\n    const fetchData = () => {\r\n\r\n    const planetPage1 ='https://swapi.dev/api/planets/?page=1';\r\n    const planetPage2 ='https://swapi.dev/api/planets/?page=2';\r\n    const planetPage3 ='https://swapi.dev/api/planets/?page=3';\r\n    const planetPage4 ='https://swapi.dev/api/planets/?page=4';\r\n    const planetPage5 ='https://swapi.dev/api/planets/?page=5';\r\n    const planetPage6 ='https://swapi.dev/api/planets/?page=6';\r\n\r\n    const getPlanetPage1 = axios.get(planetPage1);\r\n    const getPlanetPage2 = axios.get(planetPage2);\r\n    const getPlanetPage3 = axios.get(planetPage3);\r\n    const getPlanetPage4 = axios.get(planetPage4);\r\n    const getPlanetPage5 = axios.get(planetPage5);\r\n    const getPlanetPage6 = axios.get(planetPage6);\r\n\r\n    Promise.all([getPlanetPage1,getPlanetPage2,getPlanetPage3,getPlanetPage4,getPlanetPage5,getPlanetPage6]).then((res) => {\r\n \r\n\r\n        setPlanet1(res[0].data.results);\r\n        setPlanet2(res[1].data.results);\r\n        setPlanet3(res[2].data.results);\r\n        setPlanet4(res[3].data.results);\r\n        setPlanet5(res[4].data.results);\r\n        setPlanet6(res[5].data.results);\r\n    }                );\r\n\r\n}\r\n\r\n    useEffect(()=>{\r\n        fetchData()\r\n       //получаем данные о планетах\r\n  \r\n    },[]);\r\n\r\n\r\n    let newPlanet =   planet1.flat();\r\n    let newPlanet2 =  planet2.flat();\r\n    let newPlanet3 =  planet3.flat();\r\n    let newPlanet4 =  planet4.flat();\r\n    let newPlanet5 =  planet5.flat();\r\n    let newPlanet6 =  planet6.flat();\r\n\r\n    console.log(newPlanet)\r\n  \r\n\r\n  return (\r\n    <div className='container block-all_planets'>\r\n        <div className='row'>\r\n            <div className=\"col-sm\">\r\n{newPlanet.map(planet=> {\r\n         \r\n    return (\r\n        \r\n        <Planet key={planet.id} name={planet.name}url={planet.url} \r\n        climate={planet.climate}\r\n        terrain={planet.terrain}\r\n        surfaceWater={planet.surface_water}\r\n        gravity={planet.gravity}\r\n        population={planet.population}\r\n        residents={planet.residents}\r\n        films={planet.films}\r\n        ></Planet>\r\n    )\r\n   \r\n})\r\n}  \r\n        </div> \r\n        <div className=\"col\">\r\n       \r\n{newPlanet2.map(planet=> {\r\n                \r\n            return (\r\n                 \r\n                 <Planet key={planet.id} name={planet.name}url={planet.url} \r\n                 climate={planet.climate}\r\n                 terrain={planet.terrain}\r\n                 surfaceWater={planet.surface_water}\r\n                 gravity={planet.gravity}\r\n                 population={planet.population}\r\n                 residents={planet.residents}\r\n                 films={planet.films}\r\n                 ></Planet>\r\n              \r\n             )\r\n            \r\n         })\r\n         \r\n         }  \r\n                </div>  \r\n                <div className=\"col-sm\">\r\n                \r\n{newPlanet3.map(planet=> {    \r\n                \r\n            return (\r\n                    <Planet key={planet.id} name={planet.name}url={planet.url} \r\n                    climate={planet.climate}\r\n                    terrain={planet.terrain}\r\n                    surfaceWater={planet.surface_water}\r\n                    gravity={planet.gravity}\r\n                    population={planet.population}\r\n                    residents={planet.residents}\r\n                    films={planet.films}\r\n                    ></Planet>\r\n                 \r\n                )\r\n               \r\n            })\r\n            }  \r\n                </div>\r\n\r\n                </div>\r\n                <div className='row'>\r\n                <div className=\"col-sm\">\r\n                \r\n{newPlanet4.map(planet=> {    \r\n                \r\n            return (\r\n                    <Planet key={planet.id} name={planet.name}url={planet.url} \r\n                    climate={planet.climate}\r\n                    terrain={planet.terrain}\r\n                    surfaceWater={planet.surface_water}\r\n                    gravity={planet.gravity}\r\n                    population={planet.population}\r\n                    residents={planet.residents}\r\n                    films={planet.films}\r\n                    ></Planet>\r\n                 \r\n                )\r\n               \r\n            })\r\n            }  \r\n                </div>\r\n                <div className=\"col-sm\">\r\n                \r\n{newPlanet5.map(planet=> {    \r\n                \r\n            return (\r\n                    <Planet key={planet.id} name={planet.name}url={planet.url} \r\n                    climate={planet.climate}\r\n                    terrain={planet.terrain}\r\n                    surfaceWater={planet.surface_water}\r\n                    gravity={planet.gravity}\r\n                    population={planet.population}\r\n                    residents={planet.residents}\r\n                    films={planet.films}\r\n                    ></Planet>\r\n                 \r\n                )\r\n               \r\n            })\r\n            }  \r\n                </div>\r\n                <div className=\"col-sm\">\r\n                \r\n{newPlanet6.map(planet=> {    \r\n                \r\n            return (\r\n                    <Planet key={planet.id} name={planet.name}url={planet.url} \r\n                    climate={planet.climate}\r\n                    terrain={planet.terrain}\r\n                    surfaceWater={planet.surface_water}\r\n                    gravity={planet.gravity}\r\n                    population={planet.population}\r\n                    residents={planet.residents}\r\n                    films={planet.films}\r\n                    ></Planet>\r\n                 \r\n                )\r\n            })\r\n            }  \r\n                </div>\r\n\r\n            </div>\r\n         </div>\r\n  \r\n    )\r\n}\r\n\r\n\r\nexport default ControlPlanet;\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport const ASIC_LIST = {\r\n     \r\n 'Asics' : [ {\r\n     'id' : '1',\r\n     'model' : 'Asic_S9j',\r\n      'terahash' : '10.2', \r\n      'kwt' : '0.939',\r\n      'price_kwt' :'4',\r\n      'price_asic' : '15000',\r\n    },\r\n   \r\n \r\n       {\r\n        'id' : '4',\r\n        'model' : 'Dual S9j',\r\n         'terahash' : '19.8', \r\n         'kwt' : '1.59',\r\n         'price_kwt' :'4',\r\n         'price_asic' : '15000',\r\n       },\r\n\r\n       {\r\n        'id' : '4',\r\n        'model' : 'L3+',\r\n         'terahash' : '12.6', \r\n         'kwt' : '0.8',\r\n         'price_kwt' :'4',\r\n         'price_asic' : '15000',\r\n       },\r\n\r\n   \r\n       {\r\n        'id' : '6',\r\n        'model' : 't15',\r\n         'terahash' : '23', \r\n         'kwt' : '1.55',\r\n         'price_kwt' :'4',\r\n         'price_asic' : '15000',\r\n       },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n],\r\n           \r\n\r\n    };\r\n \r\n\r\n  \r\n        // return (\r\n            \r\n        //     <div  className=\"img-block\">\r\n                \r\n        //     {Object.keys(img_json).map(key => (\r\n       \r\n        //              <img src={img_json[key].portfolioImage} />\r\n        //     ))}\r\n        //       </div>\r\n        //     );\r\n    \r\n\r\n       \r\n\r\n        //Test\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {ASIC_LIST} from './MinerList';\r\n\r\nconst Miner = ({id,price,model,terahash, watt,price_kwt}) => {\r\n\r\n\r\n\r\n\r\nconst type = ASIC_LIST.Asics;\r\nconsole.log(type);\r\n\r\nlet btcDay = (0.000005 * Number(terahash)).toFixed(6);\r\nlet incomeDay = (btcDay * price).toFixed(2);\r\nlet incomeMonth = (incomeDay * 30).toFixed(2);\r\nlet energyCost = (watt * price_kwt * 720).toFixed(2);\r\nlet profit = (incomeMonth - energyCost).toFixed(2);\r\nlet amount = 1;\r\nlet sum = profit * amount ;\r\n\r\nconsole.log(btcDay);\r\n\r\n    return (\r\n\r\n\r\n\r\n        <tr>\r\n        <td>{model}</td>\r\n        <td>{terahash}</td>\r\n        <td>{watt}</td>\r\n        <td>{btcDay}</td>\r\n        <td>{price}</td>\r\n        <td>{incomeDay}</td>\r\n        <td>{incomeMonth}</td>\r\n        <td>{price_kwt}</td>\r\n        <td>{energyCost}</td>\r\n        <td>{profit}</td>\r\n        <td>{amount}</td>\r\n        <td>{sum}</td>\r\n \r\n    \r\n   \r\n    </tr>\r\n        \r\n        // <div className=\"col-sm planet-container\">\r\n        //     <div className=\"row planet-row\">\r\n        //         <div className=\"planet\">\r\n        //             <h1>{name}</h1>\r\n        //             <a className=\"planet-url\"href={url} target='_blank'>{url}</a>\r\n\r\n        //                 {img}\r\n        // </div>\r\n        //         <br />\r\n        //         <div className=\"planet-data\">\r\n        //             <table>\r\n        //             <tr>\r\n        //             <td>Климат:  </td> \r\n        //             <td>{climate}</td>\r\n        //             </tr>\r\n        //             <tr>\r\n        //             <td>Местность: </td>\r\n        //             <td>{terrain}</td>\r\n        //             </tr>\r\n        //             <tr>\r\n        //             <td>Вода:  </td>\r\n        //             <td>{surface_water}</td>\r\n        //             </tr>\r\n        //             <tr>\r\n        //             <td>Гравитация:  </td>\r\n        //             <td> {gravity}</td>\r\n        //             </tr>\r\n        //             <tr>\r\n        //             <td>Население:  </td>  <td> {population}</td>\r\n        //             </tr>\r\n        //             </table>\r\n        //             <br />\r\n        //         </div>\r\n             \r\n        //     </div>\r\n        //     <br />\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Miner;\r\n\r\n//git\r\n","import React, {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Miner from './Miner';\r\nimport {ASIC_LIST} from './MinerList';\r\nimport './Miner.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nfunction ControlMiner() {\r\n    const [btcRate, SetbtcRate] = useState([]);\r\nconst newList ={ASIC_LIST}; \r\nconst hello = newList.ASIC_LIST.Asics;\r\n\r\n\r\n\r\n    const reqA = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=rub&order=market_cap_desc&per_page=1&page=1&sparkline=false';\r\n\r\n    useEffect(()=>{\r\n        axios.get(reqA)\r\n        .then(res => {\r\n            SetbtcRate(res.data[0].current_price); //получаем данные о монетах\r\n            \r\n        }).catch(error => alert('Api error'))\r\n    }, []);\r\n  \r\n  return (\r\n    <div className='container'>\r\n   <table className=\"table table-light table-bordered table-sm\">\r\n        <caption>Таблица доходности майнеров</caption>\r\n        <thead className ='thead-light'>\r\n            <tr>\r\n                <th >Model</th>\r\n                <th>Terahash</th>\r\n                <th>watt</th>\r\n                <th>btc/day</th>\r\n                <th>price btc</th>\r\n                <th>income/day</th>\r\n                <th>income/month</th>\r\n                <th>price/kwt</th>\r\n                <th>energy costs</th>\r\n                <th>profit</th>\r\n                <th>amount</th> \r\n                <th>Sum</th>\r\n             \r\n            \r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {hello.map(newLister=> {\r\n                return (\r\n            <Miner key={newLister.id} model={newLister.model} price={btcRate} terahash={newLister.terahash}\r\n            watt={newLister.kwt} price_kwt={newLister.price_kwt}>\r\n\r\n\r\n            </Miner>\r\n            )\r\n           \r\n        })\r\n    }   \r\n          \r\n          </tbody>\r\n    </table>\r\n         </div>\r\n  \r\n    )\r\n}\r\n\r\n\r\nexport default ControlMiner;\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Route, NavLink, HashRouter} from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Contact from \"./pages/Contact\";\r\nimport WeatherMain from \"../weather/WeatherMain\";\r\nimport MainTicTacToe from \"../tictactoe/MainTicTacToe\";\r\nimport Hook from \"../hooks/Hook.js\"\r\nimport Todo from \"../Todo/Todo\"\r\nimport mainApi from \"../crypto/MainApi\"\r\nimport mainPlanet from \"../planet/ControlPlanet\"\r\nimport Miner from \"../miners/ControlMiner\"\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <div>\r\n                    <ul className={\"header\"} >\r\n                        <li><NavLink to={\"/home\"} exact>Home</NavLink></li>\r\n                        <li><NavLink to={\"/contact\"}>Contact</NavLink></li>\r\n                        <li><NavLink to={\"/weather\"}>Weather</NavLink></li>\r\n                        <li><NavLink to={\"/tictactoe\"}>TicTacToe</NavLink></li>\r\n                        <li><NavLink to={\"/hook\"}>Hook button</NavLink></li>\r\n                        <li><NavLink to={\"/todo\"}>Todo</NavLink></li>\r\n                        <li><NavLink to={\"/crypto\"}>CryptoCurrency</NavLink></li>\r\n                        <li><NavLink to={\"/planets\"}>StarWars Planets</NavLink></li>\r\n                        <li><NavLink to={\"/miners\"}>ScanProfit</NavLink></li>\r\n                    </ul>\r\n                    <hr />\r\n                    <div className={\"content\"}>\r\n                        <Route path={\"/home\"} component={Home} />\r\n                        <Route path={\"/contact\"} component={Contact} />\r\n                        <Route path={\"/weather\"} component={WeatherMain} />\r\n                        <Route path={\"/tictactoe\"} component={MainTicTacToe} />\r\n                        <Route path={\"/hook\"} component={Hook} />\r\n                        <Route path={\"/todo\"} component={Todo} />\r\n                        <Route path={\"/crypto\"} component={mainApi} />\r\n                        <Route path={\"/planets\"} component={mainPlanet} />\r\n                        <Route path={\"/miners\"} component={Miner} />\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/menu/Main';\n\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}